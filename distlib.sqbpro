<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/schiffma/Google Drive/GitHub/distlib/distlib.db" readonly="0" foreign_keys="" case_sensitive_like="" temp_store="" wal_autocheckpoint="" synchronous=""/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1020"/><column_width id="4" width="0"/></tab_structure><tab_browse><current_table name="0,0:"/><default_encoding codec=""/><browse_table_settings/></tab_browse><tab_sql><sql name="SQL 1">select lsim('kitten','sitting');

select lsim('Clark Kent','Claire Kent');
select lsim('Clärk Kent','Cläire Kent');

select jsim('Peter Parker','Pete Parker');
select jsim('Péter Pärker','Péte Pärker');

select jwsim('Peter Parker','Pete Parker');
select jwsim('Péter Pärker','Péte Pärker');

select lsim('a cat','an act');

select jsim('Clark Kent','Claire Kent');

select ldist('fish', 'ifsh');

select * from subseq('ABC');

DROP TABLE IF EXISTS perm_gen;
CREATE TABLE IF NOT EXISTS perm_gen AS
WITH orig_ AS (SELECT 'Gerät' AS orig), 
perm_ AS (SELECT orig, permut FROM perm(orig) JOIN orig_ ON 1=1)
SELECT * FROM perm_;

--CREATE TABLE IF NOT EXISTS perm_test AS
--WITH orig_ AS (SELECT 'Z''Hansrüedi' AS orig), 
--perm_ AS (SELECT orig, permut FROM perm(orig) JOIN orig_ ON 1=1)
--SELECT * FROM perm_;

CREATE TABLE IF NOT EXISTS perm_test AS
SELECT orig, permut, lcstr(orig, permut) lcstr, lcstrl(orig, permut) lcstrl, lsim(orig, permut) lsim, 
dlsim(orig, permut) dlsim, jsim(orig, permut) jsim, jwsim(orig, permut) jwsim FROM perm_gen
;

DROP TABLE IF EXISTS subseq_gen;
CREATE TABLE IF NOT EXISTS subseq_gen AS
WITH orig_ AS (SELECT 'Lückenbüßer' AS orig), 
subseq_ AS (SELECT orig, subseq FROM subseq(orig) JOIN orig_ ON 1=1)
SELECT * FROM subseq_;

DROP TABLE IF EXISTS subseq_test;
CREATE TABLE IF NOT EXISTS subseq_test AS
SELECT orig, subseq, lcstr(orig, subseq) lcstr, lcstrl(orig, subseq) lcstrl, lsim(orig, subseq) lsim, 
dlsim(orig, subseq) dlsim, jsim(orig, subseq) jsim, jwsim(orig, subseq) jwsim from subseq_gen
;

VACUUM;



</sql><current_tab id="0"/></tab_sql></sqlb_project>
